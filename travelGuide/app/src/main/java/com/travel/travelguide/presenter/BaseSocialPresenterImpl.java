package com.travel.travelguide.presenter;import com.github.gorbin.asne.core.SocialNetwork;import com.github.gorbin.asne.core.SocialNetworkManager;import com.github.gorbin.asne.core.listener.OnLoginCompleteListener;import com.github.gorbin.asne.core.listener.OnRequestDetailedSocialPersonCompleteListener;import com.github.gorbin.asne.core.listener.OnRequestSocialPersonCompleteListener;import com.github.gorbin.asne.core.persons.SocialPerson;import com.github.gorbin.asne.instagram.InstagramSocialNetwork;import com.github.gorbin.asne.twitter.TwitterSocialNetwork;import com.travel.travelguide.activity.MainActivity;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import vinasource.com.asnefacebook.FacebookSocialNetwork;/** * Created by Duc Nguyen on 8/20/16. */public abstract class BaseSocialPresenterImpl implements OnLoginCompleteListener, SocialNetworkManager.OnInitializationCompleteListener, OnRequestSocialPersonCompleteListener, OnRequestDetailedSocialPersonCompleteListener {    public static SocialNetworkManager mSocialNetworkManager;    /**     * SocialNetwork Ids in ASNE:     * 1 - Twitter     * 2 - LinkedIn     * 3 - Google Plus     * 4 - Facebook     * 5 - Vkontakte     * 6 - Odnoklassniki     * 7 - Instagram     */    public static final int TWITTER = TwitterSocialNetwork.ID;    public static final int FACEBOOK = FacebookSocialNetwork.ID;    public static final int INSTAGRAM = InstagramSocialNetwork.ID;    public static final String INSTAGRAM_CLIENT_KEY = "c2b925f9a5c449cba9e681653de3f4ed";    public static final String INSTAGRAM_CLIENT_SECRET = "14756b07e70f4a57b4c427e0173e106f";    public static final String INSTAGRAM_CALLBACK_URL = "http://localhost";    public static final String TWITTER_CALLBACK_URL = "oauth://ASNE";    public static final String TWITTER_CONSUMER_KEY = "BBQAUAVKYzmYtvEcNhUEvGiKd";    public static final String TWITTER_CONSUMER_SECRET = "byZzHPxE1tkGmnPEj5zUyc7MG464Q1LgNRcwbBJV1Ap86575os";    public BaseSocialPresenterImpl(FragmentManager fragmentManager, Fragment fragment) {        initSocialNetwork(fragmentManager, fragment);    }    private void initSocialNetwork(FragmentManager fragmentManager, Fragment fragment) {        ArrayList<String> fbScope = new ArrayList<String>();        fbScope.addAll(Arrays.asList("public_profile, email, user_friends, user_location, user_birthday",                "user_website, user_about_me, publish_pages"));        String instagramScope = "basic";        //Check if manager exist        if (mSocialNetworkManager == null) {            mSocialNetworkManager = new SocialNetworkManager();            //Init and add to manager FacebookSocialNetwork            FacebookSocialNetwork fbNetwork = new FacebookSocialNetwork(fragment, fbScope);            mSocialNetworkManager.addSocialNetwork(fbNetwork);            //Init and add to manager TwitterSocialNetwork            TwitterSocialNetwork twNetwork = new TwitterSocialNetwork(fragment, TWITTER_CONSUMER_KEY, TWITTER_CONSUMER_SECRET, TWITTER_CALLBACK_URL);            mSocialNetworkManager.addSocialNetwork(twNetwork);            //Instagram            InstagramSocialNetwork instagramNetwork = new InstagramSocialNetwork(fragment, INSTAGRAM_CLIENT_KEY, INSTAGRAM_CLIENT_SECRET, INSTAGRAM_CALLBACK_URL, instagramScope);            mSocialNetworkManager.addSocialNetwork(instagramNetwork);            //Initiate every network from mSocialNetworkManager            fragmentManager.beginTransaction().add(mSocialNetworkManager, MainActivity.SOCIAL_NETWORK_TAG).commit();            mSocialNetworkManager.setOnInitializationCompleteListener(this);        } else {            //if manager exist - get and setup login only for initialized SocialNetworks            if(!mSocialNetworkManager.getInitializedSocialNetworks().isEmpty()) {                List<SocialNetwork> socialNetworks = mSocialNetworkManager.getInitializedSocialNetworks();                for (SocialNetwork socialNetwork : socialNetworks) {                    socialNetwork.setOnLoginCompleteListener(this);                }            }        }    }    @Override    public void onSocialNetworkManagerInitialized() {        for (SocialNetwork socialNetwork : mSocialNetworkManager.getInitializedSocialNetworks()) {            socialNetwork.setOnLoginCompleteListener(this);        }    }    @Override    public void onLoginSuccess(int socialNetworkID) {        int id = 0;        requestDetailInfo(socialNetworkID);    }    @Override    public void onRequestDetailedSocialPersonSuccess(int socialNetworkID, SocialPerson socialPerson) {        int id = 0;    }    @Override    public void onRequestSocialPersonSuccess(int socialNetworkId, SocialPerson socialPerson) {        int id = 0;    }    @Override    public void onError(int socialNetworkID, String requestID, String errorMessage, Object data) {        int id = 0;    }    public void requestDetailInfo(int networkId){        startGetSocialInfo();        SocialNetwork socialNetwork = mSocialNetworkManager.getSocialNetwork(networkId);        if(!socialNetwork.isConnected()) {            if(networkId != 0) {                socialNetwork.requestLogin();            } else {                onError(networkId, "", "Wrong networkId", null );            }        } else {            socialNetwork.setOnRequestCurrentPersonCompleteListener(this);            socialNetwork.setOnRequestDetailedSocialPersonCompleteListener(this);            socialNetwork.requestDetailedCurrentPerson();        }    }    public abstract void startGetSocialInfo();}